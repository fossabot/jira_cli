name: Release
on:
  push:
    tags:
      - '*'

defaults:
  run:
    shell: bash

env:
  RUSTFLAGS: "-C target-feature=+crt-static"

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            rust: stable
            other: x86_64-unknown-linux-gnu
            artifact_name: jira_cli
            asset_name: jira_cli-linux_amd64
          - os: macos-latest
            rust: stable
            other: x86_64-apple-darwin
            artifact_name: jira_cli
            asset_name: jira_cli-darwin_amd64
          - os: windows-latest
            rust: stable-msvc
            other: x86_64-pc-windows-msvc
            artifact_name: jira_cli.exe
            asset_name: jira_cli-windows_msvc_amd64.exe
          - os: windows-latest
            rust: stable-gnu
            other: x86_64-pc-windows-gnu
            artifact_name: jira_cli.exe
            asset_name: jira_cli-windows_gnu_amd64.exe
    steps:
      - uses: actions/checkout@v2
      - name: Update Rustup (temporary workaround)
        run: rustup self update
        shell: bash
        if: startsWith(matrix.os, 'windows')
      - run: rustup update --no-self-update ${{ matrix.rust }} && rustup default ${{ matrix.rust }}
      - run: rustup target add ${{ matrix.other }}
      - run: sudo apt update -y && sudo apt install expect gcc-multilib libsecret-1-0 libsecret-1-dev -y
        if: matrix.os == 'ubuntu-latest'
      - run: rustup component add rustfmt || echo "rustfmt not available"
      - run: cargo build --release --target ${{ matrix.other }}
      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v1-release
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/${{ matrix.other }}/release/${{ matrix.artifact_name }}
          asset_name: ${{ matrix.asset_name }}
          tag: ${{ github.ref_name }}